import numpy as np
import matplotlib.pyplot as plt
import random
import time

# Функция, которую интегрируем и дифференцируем
def f(x):
    return np.sin(x) + 0.5*x**2

# Численная производная (метод разностных отношений)
def numerical_derivative(f, x, h=1e-5):
    return (f(x + h) - f(x - h)) / (2 * h)

# Метод Монте-Карло для интегрирования
def monte_carlo_integration(f, a, b, num_points=1000):
    x_random = np.random.uniform(a, b, num_points)  # Рандомные точки X
    f_values = f(x_random)  # Значения функции в этих точках
    integral = (b - a) * np.mean(f_values)  # Вычисление интеграла
    return integral, x_random, f_values

# Задаём границы интегрирования
a, b = 0, np.pi

# Вычисляем интеграл методом Монте-Карло
integral, x_mc, y_mc = monte_carlo_integration(f, a, b, num_points=500)

# Создаём массив X для построения графика
x_vals = np.linspace(-1, np.pi + 1, 400)
y_vals = f(x_vals)
dy_vals = numerical_derivative(f, x_vals)

# Выбираем случайный цвет для точек Монте-Карло
random_color = (random.random(), random.random(), random.random())

# Визуализация
fig, ax = plt.subplots(figsize=(8, 6))

# График функции
ax.plot(x_vals, y_vals, label=r'$f(x) = \sin(x) + 0.5x^2$', color='blue', linewidth=2)

# График численной производной
ax.plot(x_vals, dy_vals, label="Численная производная", color='red', linestyle='dashed', linewidth=2)

# Случайные точки Монте-Карло
ax.scatter(x_mc, y_mc, color=random_color, s=10, alpha=0.5, label="Точки Монте-Карло")

# Границы интегрирования
ax.axvline(a, color='black', linestyle='--', alpha=0.7)
ax.axvline(b, color='black', linestyle='--', alpha=0.7)

# Подписи
ax.set_title("Метод Монте-Карло и численное дифференцирование")
ax.set_xlabel("x")
ax.set_ylabel("f(x) и f'(x)")
ax.legend()
ax.grid(True)

# Создаём уникальное имя файла, чтобы не перезаписывать старые файлы
filename = f"D:/monte_carlo_{int(time.time())}.png"

# Сохранение графика на диск D
plt.savefig(filename)
plt.show()

# Вывод результата интегрирования
print(f"Приближённое значение интеграла методом Монте-Карло: {integral:.6f}")
print(f"График сохранён как: {filename}")
