import numpy as np
import matplotlib.pyplot as plt


def monte_carlo_integration(func, a, b, num_points):
    x_rand = np.random.uniform(a, b, num_points)
    y_rand = np.random.uniform(0, 1, num_points)  # –ü–æ–¥–±–æ—Ä –ø–æ –æ—Å–∏ Y
    under_curve = y_rand < func(x_rand)

    integral = (b - a) * np.mean(under_curve)
    return integral, x_rand, y_rand, under_curve


# –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä—É—é –∏–Ω—Ç–µ–≥—Ä–∏—Ä—É–µ–º (–ø—Ä–∏–º–µ—Ä: e^(-x^2))
def func(x):
    return np.exp(-x ** 2)


# üîπ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –≤–≤–æ–¥ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ç–æ—á–µ–∫
num_points = int(input("–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª—É—á–∞–π–Ω—ã—Ö —Ç–æ—á–µ–∫: "))

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã
a, b = 0, 2  # –ò–Ω—Ç–µ—Ä–≤–∞–ª –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–∏—è

# –ó–∞–ø—É—Å–∫ –º–µ—Ç–æ–¥–∞ –ú–æ–Ω—Ç–µ-–ö–∞—Ä–ª–æ
integral, x_rand, y_rand, under_curve = monte_carlo_integration(func, a, b, num_points)

# üìä **–ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–∞**
plt.figure(figsize=(8, 6))
x = np.linspace(a, b, 1000)
plt.plot(x, func(x), 'r-', linewidth=2, label="f(x) = e^(-x¬≤)")

plt.scatter(x_rand[under_curve], y_rand[under_curve], color='blue', s=1, label="–¢–æ—á–∫–∏ –ø–æ–¥ –∫—Ä–∏–≤–æ–π")
plt.scatter(x_rand[~under_curve], y_rand[~under_curve], color='red', s=1, label="–¢–æ—á–∫–∏ –Ω–∞–¥ –∫—Ä–∏–≤–æ–π")

plt.xlabel("x")
plt.ylabel("y")
plt.legend()
plt.title("–ú–µ—Ç–æ–¥ –ú–æ–Ω—Ç–µ-–ö–∞—Ä–ª–æ –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–∏—è")
plt.grid()

# ‚ú® **–î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –Ω–∞ –≥—Ä–∞—Ñ–∏–∫**
plt.text(0.5, 0.5, f"–ü—Ä–∏–±–ª–∏–∂—ë–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞–ª–∞:\n{integral:.6f}\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ—á–µ–∫: {num_points}",
         fontsize=12, color="black", bbox=dict(facecolor='white', alpha=0.7))

# üìÅ **–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–∞ –≤ —Ñ–∞–π–ª**
plot_file = "D:/monte_carlo_plot.png"
plt.savefig(plot_file, dpi=300)

print(f"–ì—Ä–∞—Ñ–∏–∫ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ {plot_file}")

plt.show()
